{
    "sourceFile": "src/xyz/didx/didcomm/DIDDocTypes.scala",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1696856679841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1696857755664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   case Plaintext extends Typ(\"application/didcomm-plain+json\")\n }\n \n object Typ:\n-  def parse(typ: String): Typ =\n+  def parse(typ: String): EitherTyp =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n       case \"application/didcomm-signed+json\"    => Typ.Signed\n       case \"application/didcomm-plain+json\"     => Typ.Plaintext\n"
                },
                {
                    "date": 1696857762040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   case Plaintext extends Typ(\"application/didcomm-plain+json\")\n }\n \n object Typ:\n-  def parse(typ: String): EitherTyp =\n+  def parse(typ: String): Either[Typ, =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n       case \"application/didcomm-signed+json\"    => Typ.Signed\n       case \"application/didcomm-plain+json\"     => Typ.Plaintext\n"
                },
                {
                    "date": 1696857769181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   case Plaintext extends Typ(\"application/didcomm-plain+json\")\n }\n \n object Typ:\n-  def parse(typ: String): Either[Typ, =\n+  def parse(typ: String): Either[Error,Typ =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n       case \"application/didcomm-signed+json\"    => Typ.Signed\n       case \"application/didcomm-plain+json\"     => Typ.Plaintext\n"
                },
                {
                    "date": 1696857829306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,13 @@\n   case Plaintext extends Typ(\"application/didcomm-plain+json\")\n }\n \n object Typ:\n-  def parse(typ: String): Either[Error,Typ =\n+  def parse(typ: String): Either[Error,Typ] =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n       case \"application/didcomm-signed+json\"    => Typ.Signed\n-      case \"application/didcomm-plain+json\"     => Typ.Plaintext\n-      case _                                    => throw DIDDocException(\"Unknown type\")\n+      case \"application/didcomm-plain+json\"     => Err\"Unknown type\")\n \n enum VerificationMethodType(typ: String):\n   case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n   case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n"
                },
                {
                    "date": 1696857834809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   def parse(typ: String): Either[Error,Typ] =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n       case \"application/didcomm-signed+json\"    => Typ.Signed\n-      case \"application/didcomm-plain+json\"     => Err\"Unknown type\")\n+      case \"application/didcomm-plain+json\"     => LeftError\"Unknown type\")\n \n enum VerificationMethodType(typ: String):\n   case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n   case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n"
                },
                {
                    "date": 1696857840867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   def parse(typ: String): Either[Error,Typ] =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n       case \"application/didcomm-signed+json\"    => Typ.Signed\n-      case \"application/didcomm-plain+json\"     => LeftError\"Unknown type\")\n+      case \"application/didcomm-plain+json\"     => Left(Error\"Unknown type\")\n \n enum VerificationMethodType(typ: String):\n   case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n   case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n"
                },
                {
                    "date": 1696857849697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+package xyz.didx.didcomm\n+\n+\n+enum Typ(typ: String) {\n+  case Encrypted extends Typ(\"application/didcomm-encrypted+json\")\n+  case Signed    extends Typ(\"application/didcomm-signed+json\")\n+  case Plaintext extends Typ(\"application/didcomm-plain+json\")\n+}\n+\n+object Typ:\n+  def parse(typ: String): Either[Error,Typ] =\n+    typ match\n+      case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n+      case \"application/didcomm-signed+json\"    => Typ.Signed\n+      case \"application/didcomm-plain+json\"     => Left(Error()\"Unknown type\")\n+\n+enum VerificationMethodType(typ: String):\n+  case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n+  case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n+  case X25519_KEY_AGREEMENT_KEY_2019 extends VerificationMethodType(\"X25519KeyAgreementKey2019\")\n+  case X25519_KEY_AGREEMENT_KEY_2020 extends VerificationMethodType(\"X25519KeyAgreementKey2020\")\n+  case ED25519_VERIFICATION_KEY_2020 extends VerificationMethodType(\"Ed25519VerificationKey2020\")\n+  case ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n+      extends VerificationMethodType(\n+        \"EcdsaSecp256k1VerificationKey2019\"\n+      ) // - not supported now\n+  case OTHER extends VerificationMethodType(\"Other\")\n+  // Ed25519VerificationKey2020\n+\n+object VerificationMethodType:\n+  def fromString(typ: String): VerificationMethodType =\n+    typ match\n+      case \"JsonWebKey2020\" => VerificationMethodType.JSON_WEB_KEY_2020\n+      case \"Ed25519VerificationKey2018\" =>\n+        VerificationMethodType.ED25519_VERIFICATION_KEY_2018\n+      case \"X25519KeyAgreementKey2019\" =>\n+        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2019\n+      case \"X25519KeyAgreementKey2020\" =>\n+        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2020\n+      case \"Ed25519VerificationKey2020\" =>\n+        VerificationMethodType.ED25519_VERIFICATION_KEY_2020\n+      case \"EcdsaSecp256k1VerificationKey2019\" =>\n+        VerificationMethodType.ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n+      case _ => VerificationMethodType.OTHER\n+\n+enum VerificationMaterialFormat(val format: String):\n+  case JWK       extends VerificationMaterialFormat(\"JWK\")\n+  case BASE58    extends VerificationMaterialFormat(\"base58\")\n+  case MULTIBASE extends VerificationMaterialFormat(\"multibase\")\n+  case OTHER     extends VerificationMaterialFormat(\"other\")\n+\n+object VerificationMaterialFormat:\n+  def fromString(format: String): VerificationMaterialFormat =\n+    format match\n+      case \"JWK\"       => VerificationMaterialFormat.JWK\n+      case \"base58\"    => VerificationMaterialFormat.BASE58\n+      case \"multibase\" => VerificationMaterialFormat.MULTIBASE\n+      case _           => VerificationMaterialFormat.OTHER\n+\n+enum DIDCommMessageProtocolTypes(val typ: String):\n+  case Forward\n+      extends DIDCommMessageProtocolTypes(\n+        \"https://didcomm.org/routing/2.0/forward\"\n+      )\n+\n+object DIDCommMessageProtocolTypes:\n+  def parse(typ: String): DIDCommMessageProtocolTypes =\n+    typ match\n+      case \"https://didcomm.org/routing/2.0/forward\" =>\n+        DIDCommMessageProtocolTypes.Forward\n+      case _ => throw DIDDocException(\"Unknown type\")\n"
                },
                {
                    "date": 1696857856444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   def parse(typ: String): Either[Error,Typ] =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n       case \"application/didcomm-signed+json\"    => Typ.Signed\n-      case \"application/didcomm-plain+json\"     => Left(Error()\"Unknown type\")\n+      case \"application/didcomm-plain+json\"     => Left(Error(\"Unknown type\")\n \n enum VerificationMethodType(typ: String):\n   case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n   case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n@@ -68,75 +68,4 @@\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n         DIDCommMessageProtocolTypes.Forward\n       case _ => throw DIDDocException(\"Unknown type\")\n-package xyz.didx.didcomm\n-\n-\n-enum Typ(typ: String) {\n-  case Encrypted extends Typ(\"application/didcomm-encrypted+json\")\n-  case Signed    extends Typ(\"application/didcomm-signed+json\")\n-  case Plaintext extends Typ(\"application/didcomm-plain+json\")\n-}\n-\n-object Typ:\n-  def parse(typ: String): Either[Error,Typ] =\n-    typ match\n-      case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n-      case \"application/didcomm-signed+json\"    => Typ.Signed\n-      case \"application/didcomm-plain+json\"     => Left(Error\"Unknown type\")\n-\n-enum VerificationMethodType(typ: String):\n-  case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n-  case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n-  case X25519_KEY_AGREEMENT_KEY_2019 extends VerificationMethodType(\"X25519KeyAgreementKey2019\")\n-  case X25519_KEY_AGREEMENT_KEY_2020 extends VerificationMethodType(\"X25519KeyAgreementKey2020\")\n-  case ED25519_VERIFICATION_KEY_2020 extends VerificationMethodType(\"Ed25519VerificationKey2020\")\n-  case ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n-      extends VerificationMethodType(\n-        \"EcdsaSecp256k1VerificationKey2019\"\n-      ) // - not supported now\n-  case OTHER extends VerificationMethodType(\"Other\")\n-  // Ed25519VerificationKey2020\n-\n-object VerificationMethodType:\n-  def fromString(typ: String): VerificationMethodType =\n-    typ match\n-      case \"JsonWebKey2020\" => VerificationMethodType.JSON_WEB_KEY_2020\n-      case \"Ed25519VerificationKey2018\" =>\n-        VerificationMethodType.ED25519_VERIFICATION_KEY_2018\n-      case \"X25519KeyAgreementKey2019\" =>\n-        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2019\n-      case \"X25519KeyAgreementKey2020\" =>\n-        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2020\n-      case \"Ed25519VerificationKey2020\" =>\n-        VerificationMethodType.ED25519_VERIFICATION_KEY_2020\n-      case \"EcdsaSecp256k1VerificationKey2019\" =>\n-        VerificationMethodType.ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n-      case _ => VerificationMethodType.OTHER\n-\n-enum VerificationMaterialFormat(val format: String):\n-  case JWK       extends VerificationMaterialFormat(\"JWK\")\n-  case BASE58    extends VerificationMaterialFormat(\"base58\")\n-  case MULTIBASE extends VerificationMaterialFormat(\"multibase\")\n-  case OTHER     extends VerificationMaterialFormat(\"other\")\n-\n-object VerificationMaterialFormat:\n-  def fromString(format: String): VerificationMaterialFormat =\n-    format match\n-      case \"JWK\"       => VerificationMaterialFormat.JWK\n-      case \"base58\"    => VerificationMaterialFormat.BASE58\n-      case \"multibase\" => VerificationMaterialFormat.MULTIBASE\n-      case _           => VerificationMaterialFormat.OTHER\n-\n-enum DIDCommMessageProtocolTypes(val typ: String):\n-  case Forward\n-      extends DIDCommMessageProtocolTypes(\n-        \"https://didcomm.org/routing/2.0/forward\"\n-      )\n-\n-object DIDCommMessageProtocolTypes:\n-  def parse(typ: String): DIDCommMessageProtocolTypes =\n-    typ match\n-      case \"https://didcomm.org/routing/2.0/forward\" =>\n-        DIDCommMessageProtocolTypes.Forward\n-      case _ => throw DIDDocException(\"Unknown type\")\n"
                },
                {
                    "date": 1696857906463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,11 @@\n \n object Typ:\n   def parse(typ: String): Either[Error,Typ] =\n     typ match\n-      case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n+      case \"application/didcomm-encrypted+json\" => Right(Typ.Encrypted\n       case \"application/didcomm-signed+json\"    => Typ.Signed\n-      case \"application/didcomm-plain+json\"     => Left(Error(\"Unknown type\")\n+      case \"application/didcomm-plain+json\"     => Left(Error(\"Unknown type\"))\n \n enum VerificationMethodType(typ: String):\n   case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n   case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n"
                },
                {
                    "date": 1696857911601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \n object Typ:\n   def parse(typ: String): Either[Error,Typ] =\n     typ match\n-      case \"application/didcomm-encrypted+json\" => Right(Typ.Encrypted\n+      case \"application/didcomm-encrypted+json\" => Right(Typ.Encrypted)\n       case \"application/didcomm-signed+json\"    => Typ.Signed\n       case \"application/didcomm-plain+json\"     => Left(Error(\"Unknown type\"))\n \n enum VerificationMethodType(typ: String):\n"
                },
                {
                    "date": 1696857920907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n object Typ:\n   def parse(typ: String): Either[Error,Typ] =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Right(Typ.Encrypted)\n-      case \"application/didcomm-signed+json\"    => Typ.Signed\n+      case \"application/didcomm-signed+json\"    => Right(Typ.Signed\n       case \"application/didcomm-plain+json\"     => Left(Error(\"Unknown type\"))\n \n enum VerificationMethodType(typ: String):\n   case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n"
                },
                {
                    "date": 1696857991079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n object Typ:\n   def parse(typ: String): Either[Error,Typ] =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Right(Typ.Encrypted)\n-      case \"application/didcomm-signed+json\"    => Right(Typ.Signed\n+      case \"application/didcomm-signed+json\"    => Right(Typ.Signed)\n       case \"application/didcomm-plain+json\"     => Left(Error(\"Unknown type\"))\n \n enum VerificationMethodType(typ: String):\n   case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n@@ -63,9 +63,9 @@\n         \"https://didcomm.org/routing/2.0/forward\"\n       )\n \n object DIDCommMessageProtocolTypes:\n-  def parse(typ: String): DIDCommMessageProtocolTypes =\n+  def parse(typ: String): Either[DIDCommMessageProtocolTypes =\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n         DIDCommMessageProtocolTypes.Forward\n       case _ => throw DIDDocException(\"Unknown type\")\n"
                },
                {
                    "date": 1696857997900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         \"https://didcomm.org/routing/2.0/forward\"\n       )\n \n object DIDCommMessageProtocolTypes:\n-  def parse(typ: String): Either[DIDCommMessageProtocolTypes =\n+  def parse(typ: String): Either[,Error,DIDCommMessageProtocolTypes =\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n         DIDCommMessageProtocolTypes.Forward\n       case _ => throw DIDDocException(\"Unknown type\")\n"
                },
                {
                    "date": 1696858006850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         \"https://didcomm.org/routing/2.0/forward\"\n       )\n \n object DIDCommMessageProtocolTypes:\n-  def parse(typ: String): Either[,Error,DIDCommMessageProtocolTypes =\n+  def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes =\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n         DIDCommMessageProtocolTypes.Forward\n       case _ => throw DIDDocException(\"Unknown type\")\n"
                },
                {
                    "date": 1696858016583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         \"https://didcomm.org/routing/2.0/forward\"\n       )\n \n object DIDCommMessageProtocolTypes:\n-  def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes =\n+  def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes] =\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n         DIDCommMessageProtocolTypes.Forward\n       case _ => throw DIDDocException(\"Unknown type\")\n"
                },
                {
                    "date": 1696858029001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+package xyz.didx.didcomm\n+\n+\n+enum Typ(typ: String) {\n+  case Encrypted extends Typ(\"application/didcomm-encrypted+json\")\n+  case Signed    extends Typ(\"application/didcomm-signed+json\")\n+  case Plaintext extends Typ(\"application/didcomm-plain+json\")\n+}\n+\n+object Typ:\n+  def parse(typ: String): Either[Error,Typ] =\n+    typ match\n+      case \"application/didcomm-encrypted+json\" => Right(Typ.Encrypted)\n+      case \"application/didcomm-signed+json\"    => Right(Typ.Signed)\n+      case \"application/didcomm-plain+json\"     => Left(Error(\"Unknown type\"))\n+\n+enum VerificationMethodType(typ: String):\n+  case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n+  case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n+  case X25519_KEY_AGREEMENT_KEY_2019 extends VerificationMethodType(\"X25519KeyAgreementKey2019\")\n+  case X25519_KEY_AGREEMENT_KEY_2020 extends VerificationMethodType(\"X25519KeyAgreementKey2020\")\n+  case ED25519_VERIFICATION_KEY_2020 extends VerificationMethodType(\"Ed25519VerificationKey2020\")\n+  case ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n+      extends VerificationMethodType(\n+        \"EcdsaSecp256k1VerificationKey2019\"\n+      ) // - not supported now\n+  case OTHER extends VerificationMethodType(\"Other\")\n+  // Ed25519VerificationKey2020\n+\n+object VerificationMethodType:\n+  def fromString(typ: String): VerificationMethodType =\n+    typ match\n+      case \"JsonWebKey2020\" => VerificationMethodType.JSON_WEB_KEY_2020\n+      case \"Ed25519VerificationKey2018\" =>\n+        VerificationMethodType.ED25519_VERIFICATION_KEY_2018\n+      case \"X25519KeyAgreementKey2019\" =>\n+        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2019\n+      case \"X25519KeyAgreementKey2020\" =>\n+        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2020\n+      case \"Ed25519VerificationKey2020\" =>\n+        VerificationMethodType.ED25519_VERIFICATION_KEY_2020\n+      case \"EcdsaSecp256k1VerificationKey2019\" =>\n+        VerificationMethodType.ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n+      case _ => VerificationMethodType.OTHER\n+\n+enum VerificationMaterialFormat(val format: String):\n+  case JWK       extends VerificationMaterialFormat(\"JWK\")\n+  case BASE58    extends VerificationMaterialFormat(\"base58\")\n+  case MULTIBASE extends VerificationMaterialFormat(\"multibase\")\n+  case OTHER     extends VerificationMaterialFormat(\"other\")\n+\n+object VerificationMaterialFormat:\n+  def fromString(format: String): VerificationMaterialFormat =\n+    format match\n+      case \"JWK\"       => VerificationMaterialFormat.JWK\n+      case \"base58\"    => VerificationMaterialFormat.BASE58\n+      case \"multibase\" => VerificationMaterialFormat.MULTIBASE\n+      case _           => VerificationMaterialFormat.OTHER\n+\n+enum DIDCommMessageProtocolTypes(val typ: String):\n+  case Forward\n+      extends DIDCommMessageProtocolTypes(\n+        \"https://didcomm.org/routing/2.0/forward\"\n+      )\n+\n+object DIDCommMessageProtocolTypes:\n+  def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes] =\n+    typ match\n+      case \"https://didcomm.org/routing/2.0/forward\" =>\n+        DIDCommMessageProtocolTypes.Forward\n+      case _ => Error(\"Unknown type\")\n"
                },
                {
                    "date": 1696858039628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,76 +67,5 @@\n   def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes] =\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n         DIDCommMessageProtocolTypes.Forward\n-      case _ => Error(\"Unknown type\")\n-package xyz.didx.didcomm\n-\n-\n-enum Typ(typ: String) {\n-  case Encrypted extends Typ(\"application/didcomm-encrypted+json\")\n-  case Signed    extends Typ(\"application/didcomm-signed+json\")\n-  case Plaintext extends Typ(\"application/didcomm-plain+json\")\n-}\n-\n-object Typ:\n-  def parse(typ: String): Either[Error,Typ] =\n-    typ match\n-      case \"application/didcomm-encrypted+json\" => Right(Typ.Encrypted)\n-      case \"application/didcomm-signed+json\"    => Right(Typ.Signed)\n-      case \"application/didcomm-plain+json\"     => Left(Error(\"Unknown type\"))\n-\n-enum VerificationMethodType(typ: String):\n-  case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n-  case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n-  case X25519_KEY_AGREEMENT_KEY_2019 extends VerificationMethodType(\"X25519KeyAgreementKey2019\")\n-  case X25519_KEY_AGREEMENT_KEY_2020 extends VerificationMethodType(\"X25519KeyAgreementKey2020\")\n-  case ED25519_VERIFICATION_KEY_2020 extends VerificationMethodType(\"Ed25519VerificationKey2020\")\n-  case ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n-      extends VerificationMethodType(\n-        \"EcdsaSecp256k1VerificationKey2019\"\n-      ) // - not supported now\n-  case OTHER extends VerificationMethodType(\"Other\")\n-  // Ed25519VerificationKey2020\n-\n-object VerificationMethodType:\n-  def fromString(typ: String): VerificationMethodType =\n-    typ match\n-      case \"JsonWebKey2020\" => VerificationMethodType.JSON_WEB_KEY_2020\n-      case \"Ed25519VerificationKey2018\" =>\n-        VerificationMethodType.ED25519_VERIFICATION_KEY_2018\n-      case \"X25519KeyAgreementKey2019\" =>\n-        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2019\n-      case \"X25519KeyAgreementKey2020\" =>\n-        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2020\n-      case \"Ed25519VerificationKey2020\" =>\n-        VerificationMethodType.ED25519_VERIFICATION_KEY_2020\n-      case \"EcdsaSecp256k1VerificationKey2019\" =>\n-        VerificationMethodType.ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n-      case _ => VerificationMethodType.OTHER\n-\n-enum VerificationMaterialFormat(val format: String):\n-  case JWK       extends VerificationMaterialFormat(\"JWK\")\n-  case BASE58    extends VerificationMaterialFormat(\"base58\")\n-  case MULTIBASE extends VerificationMaterialFormat(\"multibase\")\n-  case OTHER     extends VerificationMaterialFormat(\"other\")\n-\n-object VerificationMaterialFormat:\n-  def fromString(format: String): VerificationMaterialFormat =\n-    format match\n-      case \"JWK\"       => VerificationMaterialFormat.JWK\n-      case \"base58\"    => VerificationMaterialFormat.BASE58\n-      case \"multibase\" => VerificationMaterialFormat.MULTIBASE\n-      case _           => VerificationMaterialFormat.OTHER\n-\n-enum DIDCommMessageProtocolTypes(val typ: String):\n-  case Forward\n-      extends DIDCommMessageProtocolTypes(\n-        \"https://didcomm.org/routing/2.0/forward\"\n-      )\n-\n-object DIDCommMessageProtocolTypes:\n-  def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes] =\n-    typ match\n-      case \"https://didcomm.org/routing/2.0/forward\" =>\n-        DIDCommMessageProtocolTypes.Forward\n-      case _ => throw DIDDocException(\"Unknown type\")\n+      case _ => Error(\"DIDDocUnknown type\")\n"
                },
                {
                    "date": 1696858044880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,5 +67,5 @@\n   def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes] =\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n         DIDCommMessageProtocolTypes.Forward\n-      case _ => Error(\"DIDDocUnknown type\")\n+      case _ => Error(\"DIDDoc: Unknown type\")\n"
                },
                {
                    "date": 1696858056432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,6 +66,6 @@\n object DIDCommMessageProtocolTypes:\n   def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes] =\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n-        DIDCommMessageProtocolTypes.Forward\n+        Right(DIDCommMessageProtocolTypes.Forward\n       case _ => Error(\"DIDDoc: Unknown type\")\n"
                },
                {
                    "date": 1696858078350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,6 +66,6 @@\n object DIDCommMessageProtocolTypes:\n   def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes] =\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n-        Right(DIDCommMessageProtocolTypes.Forward\n-      case _ => Error(\"DIDDoc: Unknown type\")\n+        Right(DIDCommMessageProtocolTypes.Forward)\n+      case _ => LeftError(\"DIDDoc: Unknown type\")\n"
                },
                {
                    "date": 1696858083582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,5 +67,5 @@\n   def parse(typ: String): Either[Error,DIDCommMessageProtocolTypes] =\n     typ match\n       case \"https://didcomm.org/routing/2.0/forward\" =>\n         Right(DIDCommMessageProtocolTypes.Forward)\n-      case _ => LeftError(\"DIDDoc: Unknown type\")\n+      case _ => Left(Error(\"DIDDoc: Unknown type\"))\n"
                },
                {
                    "date": 1696858106783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   def parse(typ: String): Either[Error,Typ] =\n     typ match\n       case \"application/didcomm-encrypted+json\" => Right(Typ.Encrypted)\n       case \"application/didcomm-signed+json\"    => Right(Typ.Signed)\n-      case \"application/didcomm-plain+json\"     => Left(Error(\"Unknown type\"))\n+      case \"application/didcomm-plain+json\"     => Left(Error(\"DIDDoc: Unknown type\"))\n \n enum VerificationMethodType(typ: String):\n   case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n   case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n"
                }
            ],
            "date": 1696856679840,
            "name": "Commit-0",
            "content": "package xyz.didx.didcomm\n\n\nenum Typ(typ: String) {\n  case Encrypted extends Typ(\"application/didcomm-encrypted+json\")\n  case Signed    extends Typ(\"application/didcomm-signed+json\")\n  case Plaintext extends Typ(\"application/didcomm-plain+json\")\n}\n\nobject Typ:\n  def parse(typ: String): Typ =\n    typ match\n      case \"application/didcomm-encrypted+json\" => Typ.Encrypted\n      case \"application/didcomm-signed+json\"    => Typ.Signed\n      case \"application/didcomm-plain+json\"     => Typ.Plaintext\n      case _                                    => throw DIDDocException(\"Unknown type\")\n\nenum VerificationMethodType(typ: String):\n  case JSON_WEB_KEY_2020             extends VerificationMethodType(\"JsonWebKey2020\")\n  case ED25519_VERIFICATION_KEY_2018 extends VerificationMethodType(\"Ed25519VerificationKey2018\")\n  case X25519_KEY_AGREEMENT_KEY_2019 extends VerificationMethodType(\"X25519KeyAgreementKey2019\")\n  case X25519_KEY_AGREEMENT_KEY_2020 extends VerificationMethodType(\"X25519KeyAgreementKey2020\")\n  case ED25519_VERIFICATION_KEY_2020 extends VerificationMethodType(\"Ed25519VerificationKey2020\")\n  case ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n      extends VerificationMethodType(\n        \"EcdsaSecp256k1VerificationKey2019\"\n      ) // - not supported now\n  case OTHER extends VerificationMethodType(\"Other\")\n  // Ed25519VerificationKey2020\n\nobject VerificationMethodType:\n  def fromString(typ: String): VerificationMethodType =\n    typ match\n      case \"JsonWebKey2020\" => VerificationMethodType.JSON_WEB_KEY_2020\n      case \"Ed25519VerificationKey2018\" =>\n        VerificationMethodType.ED25519_VERIFICATION_KEY_2018\n      case \"X25519KeyAgreementKey2019\" =>\n        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2019\n      case \"X25519KeyAgreementKey2020\" =>\n        VerificationMethodType.X25519_KEY_AGREEMENT_KEY_2020\n      case \"Ed25519VerificationKey2020\" =>\n        VerificationMethodType.ED25519_VERIFICATION_KEY_2020\n      case \"EcdsaSecp256k1VerificationKey2019\" =>\n        VerificationMethodType.ECDSA_SECP_256K1_VERIFICATION_KEY_2019\n      case _ => VerificationMethodType.OTHER\n\nenum VerificationMaterialFormat(val format: String):\n  case JWK       extends VerificationMaterialFormat(\"JWK\")\n  case BASE58    extends VerificationMaterialFormat(\"base58\")\n  case MULTIBASE extends VerificationMaterialFormat(\"multibase\")\n  case OTHER     extends VerificationMaterialFormat(\"other\")\n\nobject VerificationMaterialFormat:\n  def fromString(format: String): VerificationMaterialFormat =\n    format match\n      case \"JWK\"       => VerificationMaterialFormat.JWK\n      case \"base58\"    => VerificationMaterialFormat.BASE58\n      case \"multibase\" => VerificationMaterialFormat.MULTIBASE\n      case _           => VerificationMaterialFormat.OTHER\n\nenum DIDCommMessageProtocolTypes(val typ: String):\n  case Forward\n      extends DIDCommMessageProtocolTypes(\n        \"https://didcomm.org/routing/2.0/forward\"\n      )\n\nobject DIDCommMessageProtocolTypes:\n  def parse(typ: String): DIDCommMessageProtocolTypes =\n    typ match\n      case \"https://didcomm.org/routing/2.0/forward\" =>\n        DIDCommMessageProtocolTypes.Forward\n      case _ => throw DIDDocException(\"Unknown type\")\n"
        }
    ]
}