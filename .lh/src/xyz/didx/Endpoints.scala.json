{
    "sourceFile": "src/xyz/didx/Endpoints.scala",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 185,
            "patches": [
                {
                    "date": 1697440745762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1697440757180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import sttp.tapir.Endpoint\n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n        .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697440767053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import sttp.tapir.Endpoint\n+\n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n        .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697440780012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import sttp.tapir.Endpoint\n+import sttp.tapir.json.circe._\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n"
                },
                {
                    "date": 1697440791517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe._\n+import sttp.tapir.generic.auto._\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n"
                },
                {
                    "date": 1697440802058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import sttp.tapir.Endpoint\n-import sttp.tapir.json.circe._\n+import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto._\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697440808076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n-import sttp.tapir.generic.auto._\n+import sttp.tapir.generic.auto.* \n \n+\n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n        .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697440818043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n+import didcomm.\n \n-\n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n        .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697440827496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import didcomm.\n+import didcomm.D\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n"
                },
                {
                    "date": 1697440835943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import didcomm.D\n+import didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n"
                },
                {
                    "date": 1697440847518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import didcomm.DIDDoc\n+import didcomm.DIDDoc.encoder\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n"
                },
                {
                    "date": 1697440870815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import didcomm.DIDDoc.encoder\n+import didcomm.D.encoder\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n"
                },
                {
                    "date": 1697440878505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import didcomm.D.encoder\n+import didcomm.DIDCodec.\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n"
                },
                {
                    "date": 1697440886710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import didcomm.DIDCodec.\n+import didcomm.DIDCodec.* \n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n"
                },
                {
                    "date": 1697440909261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import didcomm.DIDCodec.* \n+import xyz.didcomm.DIDCodec.* \n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n"
                },
                {
                    "date": 1697440921638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import sttp.tapir.Endpoint\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import xyz.didcomm.DIDCodec.* \n+import xyz.didx.didcomm.DIDCodec.* \n \n+\n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n    val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n        .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697441072953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,21 @@\n+import sttp.tapir.server.ServerEndpoint\n+import sttp.tapir.swagger.bundle.SwaggerInterpreterimport sttp.tapir.json.circe.*\n+import sttp.tapir.generic.auto.* \n+import xyz.didx.didcomm.DIDCodec.* \n+import xyz.didx.didcomm.DIDDoc\n+\n+object Endpoints {\n+  //register a did:key by providing a tapir endpoint\n+   val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n+       .in(\"did\" / \"key\")\n+       .in(jsonBody[DIDDoc])\n+       .out(jsonBody[DIDDoc])\n+\n+   //register a did:web by providing a tapir endpoint\n+   val didWebEndpoint =\n+     endpoint.post\n+       .in(\"did\" / \"web\")\n+       .in(jsonBody[DIDDoc])\n+       .out(jsonBody[DIDDoc])\n+\n+}\n"
                },
                {
                    "date": 1697441085228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n+\n import sttp.tapir.server.ServerEndpoint\n-import sttp.tapir.swagger.bundle.SwaggerInterpreterimport sttp.tapir.json.circe.*\n+import sttp.tapir.swagger.bundle.SwaggerInterpreter\n+import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n import xyz.didx.didcomm.DIDCodec.* \n import xyz.didx.didcomm.DIDDoc\n \n@@ -18,25 +20,4 @@\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n }\n-import sttp.tapir.Endpoint\n-import sttp.tapir.json.circe.*\n-import sttp.tapir.generic.auto.* \n-import xyz.didx.didcomm.DIDCodec.* \n-\n-\n-object Endpoints {\n-  //register a did:key by providing a tapir endpoint\n-   val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n-       .in(\"did\" / \"key\")\n-       .in(jsonBody[DIDDoc])\n-       .out(jsonBody[DIDDoc])\n-\n-   //register a did:web by providing a tapir endpoint\n-   val didWebEndpoint =\n-     endpoint.post\n-       .in(\"did\" / \"web\")\n-       .in(jsonBody[DIDDoc])\n-       .out(jsonBody[DIDDoc])\n-\n-}\n"
                },
                {
                    "date": 1697441091534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-\n+project xyz.didx\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n"
                },
                {
                    "date": 1697441131292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-project xyz.didx\n+package xyz.didx\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n"
                },
                {
                    "date": 1697441143175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n package xyz.didx\n+\n+import cats.effect.*\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n"
                },
                {
                    "date": 1697441185402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n package xyz.didx\n \n import cats.effect.*\n+\n+import Library.*\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n"
                },
                {
                    "date": 1697441203331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n package xyz.didx\n \n import cats.effect.*\n+import sttp.tapir.*\n \n-import Library.*\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n"
                },
                {
                    "date": 1697441222935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import xyz.didx.didcomm.DIDCodec.* \n+import xyz.didx.didcomm.DIDCodec. \n import xyz.didx.didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697441235025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import xyz.didx.didcomm.DIDCodec. \n+import xyz.didx.didcomm.DIDCodec.decodeDIDDoc \n import xyz.didx.didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697441241474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,10 @@\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import xyz.didx.didcomm.DIDCodec.decodeDIDDoc \n+import xyz.didx.didcomm.DIDCodec.decodeDIDDoc\n+import xyz.didx.didcomm.DIDCodec.encodeDIDDoc \n import xyz.didx.didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697441417411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,5 +24,7 @@\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n+\n+\n }\n"
                },
                {
                    "date": 1697441423739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,6 +25,13 @@\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n \n+    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(helloServerEndpoint, booksListingServerEndpoint)\n \n+    val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n+    .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n+\n+    val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n+\n+\n }\n"
                },
                {
                    "date": 1697441432604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n \n-    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(helloServerEndpoint, booksListingServerEndpoint)\n+    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, booksListingServerEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n     .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n \n"
                },
                {
                    "date": 1697441439562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n \n-    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, booksListingServerEndpoint)\n+    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n     .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n \n"
                },
                {
                    "date": 1697441524525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import xyz.didx.didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n-   val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n+   val didKeyEndpoint: PublicEndpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n        .in(\"did\" / \"key\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n"
                },
                {
                    "date": 1697441557239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import xyz.didx.didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n-   val didKeyEndpoint: PublicEndpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n+   val didKeyEndpoint: PublicEndpoint[ DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n        .in(\"did\" / \"key\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n"
                },
                {
                    "date": 1697441588840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,15 +12,15 @@\n import xyz.didx.didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n-   val didKeyEndpoint: PublicEndpoint[ DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n+   val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n        .in(\"did\" / \"key\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n    //register a did:web by providing a tapir endpoint\n-   val didWebEndpoint =\n+   val didWebEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] =\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697442116432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n+    \n \n-\n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n     .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n"
                },
                {
                    "date": 1697442131510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,11 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    \n+    val helloServerEndpoint: ServerEndpoint[Any, IO] = helloEndpoint.serverLogicSuccess(user => IO.pure(s\"Hello ${user.name}\"))\n \n+\n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n     .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n"
                },
                {
                    "date": 1697442137906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val helloServerEndpoint: ServerEndpoint[Any, IO] = helloEndpoint.serverLogicSuccess(user => IO.pure(s\"Hello ${user.name}\"))\n+    val ServerEndpoint: ServerEndpoint[Any, IO] = helloEndpoint.serverLogicSuccess(user => IO.pure(s\"Hello ${user.name}\"))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442146030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val ServerEndpoint: ServerEndpoint[Any, IO] = helloEndpoint.serverLogicSuccess(user => IO.pure(s\"Hello ${user.name}\"))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = helloEndpoint.serverLogicSuccess(user => IO.pure(s\"Hello ${user.name}\"))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442157430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = helloEndpoint.serverLogicSuccess(user => IO.pure(s\"Hello ${user.name}\"))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(s\"Hello ${user.name}\"))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442184076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(s\"Hello ${user.name}\"))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(Didi\"))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442191673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(Didi\"))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc\"))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442198965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc\"))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\"))))\"))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442208001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\"))))\"))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\"))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442228591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\"))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442252043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\"))))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442260466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\"))))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442279893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n        .out(jsonBody[DIDDoc])\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n-    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEndpoint, didWebEndpoint)\n+    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEdidKeyServerEndpointndpoint, didWebEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n     .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n \n"
                },
                {
                    "date": 1697442285644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n        .out(jsonBody[DIDDoc])\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n-    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyEdidKeyServerEndpointndpoint, didWebEndpoint)\n+    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n     .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n \n"
                },
                {
                    "date": 1697442299785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n+    \n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebEndpoint)\n \n"
                },
                {
                    "date": 1697442306598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,12 @@\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n-    \n+    val didServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n+\n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n     .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n"
                },
                {
                    "date": 1697442316488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n-    val didServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n+    val didWebServerEndpoint: ServerEndpoint[Any, IO] = didEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebEndpoint)\n"
                },
                {
                    "date": 1697442334048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,13 @@\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n-    val didWebServerEndpoint: ServerEndpoint[Any, IO] = didEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n+    val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n \n-    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebEndpoint)\n+    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n     .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n \n"
                },
                {
                    "date": 1697443604550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n+       \n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n"
                },
                {
                    "date": 1697443614321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,10 @@\n import xyz.didx.didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n-   val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n+   val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n+    endpoint.post\n        .in(\"did\" / \"key\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n@@ -23,9 +24,9 @@\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n-       \n+\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n"
                },
                {
                    "date": 1697443627897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import xyz.didx.didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n-   val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n+  val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n        .in(\"did\" / \"key\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697443633580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n    //register a did:web by providing a tapir endpoint\n-   val didWebEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] =\n+  val didWebEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] =\n      endpoint.post\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697443644645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,18 +25,18 @@\n        .in(\"did\" / \"web\")\n        .in(jsonBody[DIDDoc])\n        .out(jsonBody[DIDDoc])\n \n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n-    val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n+val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n+val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n \n-    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n+val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n \n-    val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n-    .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n+val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n+.fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n \n-    val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n+val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n \n \n }\n"
                },
                {
                    "date": 1697443653165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,31 +12,31 @@\n import xyz.didx.didcomm.DIDDoc\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n-  val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n+    val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n-       .in(\"did\" / \"key\")\n-       .in(jsonBody[DIDDoc])\n-       .out(jsonBody[DIDDoc])\n+        .in(\"did\" / \"key\")\n+        .in(jsonBody[DIDDoc])\n+        .out(jsonBody[DIDDoc])\n \n-   //register a did:web by providing a tapir endpoint\n-  val didWebEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] =\n-     endpoint.post\n-       .in(\"did\" / \"web\")\n-       .in(jsonBody[DIDDoc])\n-       .out(jsonBody[DIDDoc])\n+    //register a did:web by providing a tapir endpoint\n+    val didWebEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] =\n+        endpoint.post\n+        .in(\"did\" / \"web\")\n+        .in(jsonBody[DIDDoc])\n+        .out(jsonBody[DIDDoc])\n \n-val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n-val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n+    val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n \n-val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n+    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n \n-val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n-.fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n+    val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n+    .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n \n-val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n+    val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n \n \n }\n"
                },
                {
                    "date": 1697445072501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,11 @@\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import xyz.didx.didcomm.DIDCodec.decodeDIDDoc\n+/* import xyz.didx.didcomm.DIDCodec.decodeDIDDoc\n import xyz.didx.didcomm.DIDCodec.encodeDIDDoc \n-import xyz.didx.didcomm.DIDDoc\n+import xyz.didx.didcomm.DIDDoc */\n \n object Endpoints {\n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697445077653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,12 @@\n /* import xyz.didx.didcomm.DIDCodec.decodeDIDDoc\n import xyz.didx.didcomm.DIDCodec.encodeDIDDoc \n import xyz.didx.didcomm.DIDDoc */\n \n+\n object Endpoints {\n+\n+    \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697445086349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \n \n object Endpoints {\n \n-    \n+    case class DIDDoc\n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697445098905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,10 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc\n+    case class DIDDoc(did: String)\n+    \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697445105938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n object Endpoints {\n \n     case class DIDDoc(did: String)\n-    \n+    gi\n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697445112816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n object Endpoints {\n \n     case class DIDDoc(did: String)\n-    gi\n+    given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697445129581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n+import io.circe.Encoder\n /* import xyz.didx.didcomm.DIDCodec.decodeDIDDoc\n import xyz.didx.didcomm.DIDCodec.encodeDIDDoc \n import xyz.didx.didcomm.DIDDoc */\n \n@@ -15,8 +16,9 @@\n object Endpoints {\n \n     case class DIDDoc(did: String)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n+    \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697445141414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n \n     case class DIDDoc(did: String)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     \n+    \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697445148386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,10 @@\n object Endpoints {\n \n     case class DIDDoc(did: String)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n+    given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n-    \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n"
                },
                {
                    "date": 1697445159385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n import io.circe.Encoder\n+import io.circe.Decoder\n /* import xyz.didx.didcomm.DIDCodec.decodeDIDDoc\n import xyz.didx.didcomm.DIDCodec.encodeDIDDoc \n import xyz.didx.didcomm.DIDDoc */\n \n"
                },
                {
                    "date": 1697445199333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String)\n+    case class DIDDoc(did: String,)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697445223367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String,)\n+    case class DIDDoc(did: String, controlle)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697445229112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String, controlle)\n+    case class DIDDoc(did: String, controller:Srr)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697445234389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String, controller:Srr)\n+    case class DIDDoc(did: String, controller:String)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697445243410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String, controller:String)\n+    case class DIDDoc(did: String, controller:Option[String)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697445250092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String, controller:Option[String)\n+    case class DIDDoc(did: String, controller:Option[String] = )\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697445257142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String, controller:Option[String] = )\n+    case class DIDDoc(did: String, controller:Option[String] = None)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697445277681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String, controller:Option[String] = None)\n+    case class DIDDoc(did: String, controller:Option[List[String] = None,)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697445284944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String, controller:Option[List[String] = None,)\n+    case class DIDDoc(did: String, controller:Option[List[String]] = None)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n     given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n     \n   //register a did:key by providing a tapir endpoint\n"
                },
                {
                    "date": 1697445299530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,9 @@\n \n object Endpoints {\n \n     case class DIDDoc(did: String, controller:Option[List[String]] = None)\n-    given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct1(\"did\")(_.did)\n-    given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct1(\"did\")(DIDDoc.apply)\n+  \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n"
                },
                {
                    "date": 1697445344337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n \n object Endpoints {\n \n     case class DIDDoc(did: String, controller:Option[List[String]] = None)\n+    \n   \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697445377200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \n object Endpoints {\n \n     case class DIDDoc(did: String, controller:Option[List[String]] = None)\n-    \n+    given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct2(\"did\", \"controller\")(d => (d.did, d.controller))\n   \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697445385012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n object Endpoints {\n \n     case class DIDDoc(did: String, controller:Option[List[String]] = None)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct2(\"did\", \"controller\")(d => (d.did, d.controller))\n+    \n   \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697445437909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n object Endpoints {\n \n     case class DIDDoc(did: String, controller:Option[List[String]] = None)\n     given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct2(\"did\", \"controller\")(d => (d.did, d.controller))\n-    \n+    given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct2(\"did\", \"controller\")(DIDDoc.apply)\n   \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n@@ -34,9 +34,9 @@\n         .in(\"did\" / \"web\")\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n \n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\",)))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n \n"
                },
                {
                    "date": 1697445447121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         .in(\"did\" / \"web\")\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n \n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\",)))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\",Some)))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n \n"
                },
                {
                    "date": 1697445940166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,9 @@\n \n \n object Endpoints {\n \n-    case class DIDDoc(did: String, controller:Option[List[String]] = None)\n-    given encodeDIDDoc: Encoder[DIDDoc] = Encoder.forProduct2(\"did\", \"controller\")(d => (d.did, d.controller))\n-    given decodeDIDDoc: Decoder[DIDDoc] = Decoder.forProduct2(\"did\", \"controller\")(DIDDoc.apply)\n-  \n+   \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n     endpoint.post\n@@ -34,9 +31,9 @@\n         .in(\"did\" / \"web\")\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n \n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\",Some)))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\",Some(List(\"did:key:123\")))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n \n"
                },
                {
                    "date": 1697445983657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,11 @@\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n import io.circe.Encoder\n-import io.circe.Decoder\n-/* import xyz.didx.didcomm.DIDCodec.decodeDIDDoc\n-import xyz.didx.didcomm.DIDCodec.encodeDIDDoc \n-import xyz.didx.didcomm.DIDDoc */\n \n \n+\n object Endpoints {\n \n    \n     \n"
                },
                {
                    "date": 1697445991896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,11 @@\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n import io.circe.Encoder\n+import DIDDoc\n \n \n-\n object Endpoints {\n \n    \n     \n"
                },
                {
                    "date": 1697446019754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n import io.circe.Encoder\n-import DIDDoc\n+import xyz.DIDDoc\n \n \n object Endpoints {\n \n"
                },
                {
                    "date": 1697446533076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n import io.circe.Encoder\n-import xyz.DIDDoc\n+import xyz.didx.DIDDoc\n \n \n object Endpoints {\n \n@@ -36,9 +36,9 @@\n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n-    .fromServerEndpoints[IO](apiEndpoints, \"did_web\", \"1.0.0\")\n+    .fromServerEndpoints[IO](apiEndpoints, \"DID\", \"1.0.0\")\n \n     val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n \n \n"
                },
                {
                    "date": 1697446544428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n-    .fromServerEndpoints[IO](apiEndpoints, \"DID\", \"1.0.0\")\n+    .fromServerEndpoints[IO](apiEndpoints, \"DIDx \", \"1.0.0\")\n \n     val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n \n \n"
                },
                {
                    "date": 1697446558149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n-    .fromServerEndpoints[IO](apiEndpoints, \"DIDx \", \"1.0.0\")\n+    .fromServerEndpoints[IO](apiEndpoints, \"DIDx Registrar and Resolver for \", \"1.0.0\")\n \n     val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n \n \n"
                },
                {
                    "date": 1697446569838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n-    .fromServerEndpoints[IO](apiEndpoints, \"DIDx Registrar and Resolver for \", \"1.0.0\")\n+    .fromServerEndpoints[IO](apiEndpoints, \"DIDx Registrar and Resolver for didkey and d\", \"1.0.0\")\n \n     val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n \n \n"
                },
                {
                    "date": 1697446578872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n \n     val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n-    .fromServerEndpoints[IO](apiEndpoints, \"DIDx Registrar and Resolver for didkey and d\", \"1.0.0\")\n+    .fromServerEndpoints[IO](apiEndpoints, \"DIDx Registrar and Resolver for did:key and did:web\", \"1.0.0\")\n \n     val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n \n \n"
                },
                {
                    "date": 1697447118626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-import io.circe.Encoder\n import xyz.didx.DIDDoc\n \n \n object Endpoints {\n"
                },
                {
                    "date": 1697447336058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         .in(\"did\" / \"web\")\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n \n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\",Some(List(\"did:key:123\")))))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\",List(\"did:key:123\")))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n \n"
                },
                {
                    "date": 1697447577082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,10 @@\n         .in(\"did\" / \"web\")\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n \n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\",List(\"did:key:123\")))))\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n+        DIDDoc(\"did:key:123\",List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n \n \n \n"
                },
                {
                    "date": 1697447584883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,10 @@\n         .out(jsonBody[DIDDoc])\n \n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\"did:key:123\",List(\"did:key:123\"))))\n-    val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(DIDDoc(\"did:key:123\")))\n+    val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n+        DIDDoc(\"did:key:123\")))\n \n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n"
                },
                {
                    "date": 1697447594158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,10 @@\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n \n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n-        DIDDoc(\"did:key:123\",List(\"did:key:123\"))))\n+        DIDDoc(\n+            \"did:key:123\",List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\"did:key:123\")))\n \n \n"
                },
                {
                    "date": 1697447606555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,10 @@\n         .out(jsonBody[DIDDoc])\n \n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\n-            \"did:key:123\",List(\"did:key:123\"))))\n+            \"did:key:123\",\n+            List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\"did:key:123\")))\n \n \n"
                },
                {
                    "date": 1697447615460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,11 @@\n         .out(jsonBody[DIDDoc])\n \n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\n+            import io.circe.generic.auto.*\n+            import sttp.tapir.generic.auto.*\n+            import sttp.tapir.json.circe.*\n             \"did:key:123\",\n             List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\"did:key:123\")))\n"
                },
                {
                    "date": 1697447620991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,9 @@\n         .out(jsonBody[DIDDoc])\n \n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\n-            import io.circe.generic.auto.*\n-            import sttp.tapir.generic.auto.*\n-            import sttp.tapir.json.circe.*\n+            \n             \"did:key:123\",\n             List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\"did:key:123\")))\n"
                },
                {
                    "date": 1697447871820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,11 @@\n         .out(jsonBody[DIDDoc])\n \n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\n-            \n+            List(\"https://www.w3.org/ns/did/v1\",\n+               \"https://w3id.org/security/suites/ed25519-2020/v1\",\n+               \"https://w3id.org/security/suites/x25519-2020/v1\")\n             \"did:key:123\",\n             List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\"did:key:123\")))\n"
                },
                {
                    "date": 1697447888113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\n             List(\"https://www.w3.org/ns/did/v1\",\n                \"https://w3id.org/security/suites/ed25519-2020/v1\",\n-               \"https://w3id.org/security/suites/x25519-2020/v1\")\n+               \"https://w3id.org/security/suites/x25519-2020/v1\"),\n             \"did:key:123\",\n             List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\"did:key:123\")))\n"
                },
                {
                    "date": 1697447899676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,11 @@\n                \"https://w3id.org/security/suites/x25519-2020/v1\"),\n             \"did:key:123\",\n             List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n-        DIDDoc(\"did:key:123\")))\n+        DIDDoc( List(\"https://www.w3.org/ns/did/v1\",\n+    \"https://w3id.org/security/suites/ed25519-2020/v1\",\n+    \"https://w3id.org/security/suites/x25519-2020/v1\"),\"did:key:123\")))\n \n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n"
                },
                {
                    "date": 1697447910679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,11 @@\n             \"did:key:123\",\n             List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc( List(\"https://www.w3.org/ns/did/v1\",\n-    \"https://w3id.org/security/suites/ed25519-2020/v1\",\n-    \"https://w3id.org/security/suites/x25519-2020/v1\"),\"did:key:123\")))\n+            \"https://w3id.org/security/suites/ed25519-2020/v1\",\n+            \"https://w3id.org/security/suites/x25519-2020/v1\"),\n+            \"did:key:123\")))\n \n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n"
                },
                {
                    "date": 1697447916136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,11 +36,11 @@\n             \"did:key:123\",\n             List(\"did:key:123\"))))\n     val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc( List(\"https://www.w3.org/ns/did/v1\",\n-            \"https://w3id.org/security/suites/ed25519-2020/v1\",\n-            \"https://w3id.org/security/suites/x25519-2020/v1\"),\n-            \"did:key:123\")))\n+                        \"https://w3id.org/security/suites/ed25519-2020/v1\",\n+                        \"https://w3id.org/security/suites/x25519-2020/v1\"),\n+                        \"did:key:123\")))\n \n \n \n     val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n"
                },
                {
                    "date": 1697447969497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n+\n import xyz.didx.DIDDoc\n \n \n object Endpoints {\n"
                },
                {
                    "date": 1697447975818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,11 @@\n import sttp.tapir.server.ServerEndpoint\n import sttp.tapir.swagger.bundle.SwaggerInterpreter\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n-\n+import io.circe.Encoder.AsArray.importedAsArrayEncoder\n+import io.circe.Encoder.AsObject.importedAsObjectEncoder\n+[error]   import io.circe.Encoder.AsRoot.importedAsRootEncoder\n import xyz.didx.DIDDoc\n \n \n object Endpoints {\n"
                },
                {
                    "date": 1697455535875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,18 +8,18 @@\n import sttp.tapir.json.circe.*\n import sttp.tapir.generic.auto.* \n import io.circe.Encoder.AsArray.importedAsArrayEncoder\n import io.circe.Encoder.AsObject.importedAsObjectEncoder\n-[error]   import io.circe.Encoder.AsRoot.importedAsRootEncoder\n+import io.circe.Encoder.AsRoot.importedAsRootEncoder\n import xyz.didx.DIDDoc\n \n \n object Endpoints {\n \n    \n     \n   //register a did:key by providing a tapir endpoint\n-    val didKeyEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] = \n+    val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697455553800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n-    val didWebEndpoint: PublicEndpoint[DIDDoc, Unit, DIDDoc, Any] =\n+    val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.post\n         .in(\"did\" / \"web\")\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697459584250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \n    \n     \n   //register a did:key by providing a tapir endpoint\n-    val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n+    val didKeyEndpoint: PublicEndpoint[stringJsonBody, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697459604799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \n    \n     \n   //register a did:key by providing a tapir endpoint\n-    val didKeyEndpoint: PublicEndpoint[stringJsonBody, Unit, DIDDoc, Any] = \n+    val didKeyEndpoint: PublicEndpoint[Stri ng, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n         .in(jsonBody[DIDDoc])\n         .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697459631502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,12 @@\n \n    \n     \n   //register a did:key by providing a tapir endpoint\n-    val didKeyEndpoint: PublicEndpoint[Stri ng, Unit, DIDDoc, Any] = \n+    val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n-        .in(jsonBody[DIDDoc])\n+        .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n     val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n"
                },
                {
                    "date": 1697459654463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     //register a did:web by providing a tapir endpoint\n     val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.post\n         .in(\"did\" / \"web\")\n-        .in(jsonBody[DIDDoc])\n+        .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n \n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\n"
                },
                {
                    "date": 1697543802284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,10 @@\n         .in(\"did\" / \"web\")\n         .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n \n+    \n+\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\n             List(\"https://www.w3.org/ns/did/v1\",\n                \"https://w3id.org/security/suites/ed25519-2020/v1\",\n"
                },
                {
                    "date": 1697543813179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,21 @@\n         .in(\"did\" / \"web\")\n         .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n \n-    \n+    val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n+       endpoint.post\n+           .in(\"did\" / \"key\")\n+           .in(stringJsonBody)\n+           .out(jsonBody[DIDDoc])\n \n+       //register a did:web by providing a tapir endpoint\n+    val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n+        endpoint.post\n+        .in(\"did\" / \"web\")\n+        .in(stringJsonBody)\n+        .out(jsonBody[DIDDoc])\n+\n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\n             List(\"https://www.w3.org/ns/did/v1\",\n                \"https://w3id.org/security/suites/ed25519-2020/v1\",\n"
                },
                {
                    "date": 1697543829521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n         .in(\"did\" / \"web\")\n         .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n \n-    val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n+    val resolveidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n        endpoint.post\n            .in(\"did\" / \"key\")\n            .in(stringJsonBody)\n            .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697543844819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,16 +30,16 @@\n         .in(\"did\" / \"web\")\n         .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n \n-    val resolveidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n+    val resolveDidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n        endpoint.post\n            .in(\"did\" / \"key\")\n            .in(stringJsonBody)\n            .out(jsonBody[DIDDoc])\n \n        //register a did:web by providing a tapir endpoint\n-    val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n+    val resolvedidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.post\n         .in(\"did\" / \"web\")\n         .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697543858194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,15 +31,15 @@\n         .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n \n     val resolveDidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n-       endpoint.post\n+       endpoint.get\n            .in(\"did\" / \"key\")\n            .in(stringJsonBody)\n            .out(jsonBody[DIDDoc])\n \n        //register a did:web by providing a tapir endpoint\n-    val resolvedidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n+    val resolveDidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.post\n         .in(\"did\" / \"web\")\n         .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n"
                },
                {
                    "date": 1697546241180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+package xyz.didx\n+\n+import cats.effect.*\n+import sttp.tapir.*\n+\n+import sttp.tapir.server.ServerEndpoint\n+import sttp.tapir.swagger.bundle.SwaggerInterpreter\n+import sttp.tapir.json.circe.*\n+import sttp.tapir.generic.auto.* \n+import io.circe.Encoder.AsArray.importedAsArrayEncoder\n+import io.circe.Encoder.AsObject.importedAsObjectEncoder\n+import io.circe.Encoder.AsRoot.importedAsRootEncoder\n+import xyz.didx.DIDDoc\n+\n+\n+object Endpoints {\n+\n+   case clas\n+    \n+  //register a did:key by providing a tapir endpoint\n+    val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n+    endpoint.post\n+        .in(\"did\" / \"key\")\n+        .in(stringJsonBody)\n+        .out(jsonBody[DIDDoc])\n+\n+    //register a did:web by providing a tapir endpoint\n+    val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n+        endpoint.post\n+        .in(\"did\" / \"web\")\n+        .in(stringJsonBody)\n+        .out(jsonBody[DIDDoc])\n+\n+    val resolveDidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n+       endpoint.get\n+           .in(\"did\" / \"key\")\n+           .in(stringJsonBody)\n+           .out(jsonBody[DIDDoc])\n+\n+       //register a did:web by providing a tapir endpoint\n+    val resolveDidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n+        endpoint.get\n+        .in(\"did\" / \"web\")\n+        .in(stringJsonBody)\n+        .out(jsonBody[DIDDoc])\n+\n+    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n+        DIDDoc(\n+            List(\"https://www.w3.org/ns/did/v1\",\n+               \"https://w3id.org/security/suites/ed25519-2020/v1\",\n+               \"https://w3id.org/security/suites/x25519-2020/v1\"),\n+            \"did:key:123\",\n+            List(\"did:key:123\"))))\n+    val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n+        DIDDoc( List(\"https://www.w3.org/ns/did/v1\",\n+                        \"https://w3id.org/security/suites/ed25519-2020/v1\",\n+                        \"https://w3id.org/security/suites/x25519-2020/v1\"),\n+                        \"did:key:123\")))\n+\n+\n+\n+    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n+\n+    val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n+    .fromServerEndpoints[IO](apiEndpoints, \"DIDx Registrar and Resolver for did:key and did:web\", \"1.0.0\")\n+\n+    val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n+\n+\n+}\n"
                },
                {
                    "date": 1697546248626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n \n object Endpoints {\n \n-   case clas\n+   case class \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n@@ -67,74 +67,4 @@\n     val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n \n \n }\n-package xyz.didx\n-\n-import cats.effect.*\n-import sttp.tapir.*\n-\n-import sttp.tapir.server.ServerEndpoint\n-import sttp.tapir.swagger.bundle.SwaggerInterpreter\n-import sttp.tapir.json.circe.*\n-import sttp.tapir.generic.auto.* \n-import io.circe.Encoder.AsArray.importedAsArrayEncoder\n-import io.circe.Encoder.AsObject.importedAsObjectEncoder\n-import io.circe.Encoder.AsRoot.importedAsRootEncoder\n-import xyz.didx.DIDDoc\n-\n-\n-object Endpoints {\n-\n-   \n-    \n-  //register a did:key by providing a tapir endpoint\n-    val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n-    endpoint.post\n-        .in(\"did\" / \"key\")\n-        .in(stringJsonBody)\n-        .out(jsonBody[DIDDoc])\n-\n-    //register a did:web by providing a tapir endpoint\n-    val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n-        endpoint.post\n-        .in(\"did\" / \"web\")\n-        .in(stringJsonBody)\n-        .out(jsonBody[DIDDoc])\n-\n-    val resolveDidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n-       endpoint.get\n-           .in(\"did\" / \"key\")\n-           .in(stringJsonBody)\n-           .out(jsonBody[DIDDoc])\n-\n-       //register a did:web by providing a tapir endpoint\n-    val resolveDidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n-        endpoint.post\n-        .in(\"did\" / \"web\")\n-        .in(stringJsonBody)\n-        .out(jsonBody[DIDDoc])\n-\n-    val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n-        DIDDoc(\n-            List(\"https://www.w3.org/ns/did/v1\",\n-               \"https://w3id.org/security/suites/ed25519-2020/v1\",\n-               \"https://w3id.org/security/suites/x25519-2020/v1\"),\n-            \"did:key:123\",\n-            List(\"did:key:123\"))))\n-    val didWebServerEndpoint: ServerEndpoint[Any, IO] = didWebEndpoint.serverLogicSuccess(user => IO.pure(\n-        DIDDoc( List(\"https://www.w3.org/ns/did/v1\",\n-                        \"https://w3id.org/security/suites/ed25519-2020/v1\",\n-                        \"https://w3id.org/security/suites/x25519-2020/v1\"),\n-                        \"did:key:123\")))\n-\n-\n-\n-    val apiEndpoints: List[ServerEndpoint[Any, IO]] = List(didKeyServerEndpoint, didWebServerEndpoint)\n-\n-    val docEndpoints: List[ServerEndpoint[Any, IO]] = SwaggerInterpreter()\n-    .fromServerEndpoints[IO](apiEndpoints, \"DIDx Registrar and Resolver for did:key and did:web\", \"1.0.0\")\n-\n-    val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n-\n-\n-}\n"
                },
                {
                    "date": 1697546258297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n \n object Endpoints {\n \n-   case class \n+   case class DID()\n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n"
                },
                {
                    "date": 1697547471161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,15 +14,16 @@\n \n \n object Endpoints {\n \n-   case class DID()\n+   case class DID(\n+    did: String)\n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n-        .in(stringJsonBody)\n+        .in(Q)\n         .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n     val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n"
                },
                {
                    "date": 1697547477531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n-        .in(Q)\n+        .in(q)\n         .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n     val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n"
                },
                {
                    "date": 1697547483351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n-        .in(q)\n+        .in(query[String](\"did\")\n         .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n     val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n"
                },
                {
                    "date": 1697547493408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n-        .in(query[String](\"did\")\n+        .in(query[String](\"did\"))\n         .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n     val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n"
                },
                {
                    "date": 1697547580108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n         .in(\"did\" / \"key\")\n-        .in(query[String](\"did\"))\n+        .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n     val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n"
                },
                {
                    "date": 1697547587442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n \n     val resolveDidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n        endpoint.get\n            .in(\"did\" / \"key\")\n-           .in(stringJsonBody)\n-           .out(jsonBody[DIDDoc])\n+.in(query[String](\"did\"))\n+   .out(jsonBody[DIDDoc])\n \n        //register a did:web by providing a tapir endpoint\n     val resolveDidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.get\n"
                },
                {
                    "date": 1697547595852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n \n     val resolveDidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n        endpoint.get\n            .in(\"did\" / \"key\")\n-.in(query[String](\"did\"))\n-   .out(jsonBody[DIDDoc])\n+           .in(query[String](\"did\"))\n+           .out(jsonBody[DIDDoc])\n \n        //register a did:web by providing a tapir endpoint\n     val resolveDidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.get\n"
                },
                {
                    "date": 1697547615226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,10 @@\n        //register a did:web by providing a tapir endpoint\n     val resolveDidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.get\n         .in(\"did\" / \"web\")\n-        .in(stringJsonBody)\n+        .in(query[String](\"did\"))\n+\n         .out(jsonBody[DIDDoc])\n \n     val didKeyServerEndpoint: ServerEndpoint[Any, IO] = didKeyEndpoint.serverLogicSuccess(user => IO.pure(\n         DIDDoc(\n"
                },
                {
                    "date": 1697547648552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         .out(jsonBody[DIDDoc])\n \n     val resolveDidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n        endpoint.get\n-           .in(\"did\" / \"key\")\n+           .in(\"resolve\" / \"key\")\n            .in(query[String](\"did\"))\n            .out(jsonBody[DIDDoc])\n \n        //register a did:web by providing a tapir endpoint\n"
                },
                {
                    "date": 1697547654627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \n        //register a did:web by providing a tapir endpoint\n     val resolveDidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.get\n-        .in(\"did\" / \"web\")\n+        .in(\"resolve\" / \"web\")\n         .in(query[String](\"did\"))\n \n         .out(jsonBody[DIDDoc])\n \n"
                },
                {
                    "date": 1697548099221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n object Endpoints {\n \n    case class DID(\n     did: String)\n+   \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n     endpoint.post\n"
                },
                {
                    "date": 1697548150599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,12 @@\n    \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n-    endpoint.post\n-        .in(\"did\" / \"key\")\n-        .in(stringJsonBody)\n-        .out(jsonBody[DIDDoc])\n+        endpoint.post\n+            .in(\"did\" / \"key\")\n+            .in(stringJsonBody)\n+            .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n     val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.post\n"
                },
                {
                    "date": 1697548166749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n         endpoint.post\n-            .in(\"did\" / \"key\")\n+        .in(\"did\" / \"key\")\n             .in(stringJsonBody)\n             .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n"
                },
                {
                    "date": 1697548173134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n         endpoint.post\n         .in(\"did\" / \"key\")\n-            .in(stringJsonBody)\n-            .out(jsonBody[DIDDoc])\n+        .in(stringJsonBody)\n+        .out(jsonBody[DIDDoc])\n \n     //register a did:web by providing a tapir endpoint\n     val didWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.post\n"
                },
                {
                    "date": 1697548183995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,9 @@\n \n \n object Endpoints {\n \n-   case class DID(\n-    did: String)\n+   case class DID(did: String)\n    \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697548199038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import io.circe.Encoder.AsRoot.importedAsRootEncoder\n import xyz.didx.DIDDoc\n \n \n-object Endpoints {\n+object Endpoints\n \n    case class DID(did: String)\n    \n     \n"
                },
                {
                    "date": 1697548204832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import io.circe.Encoder.AsRoot.importedAsRootEncoder\n import xyz.didx.DIDDoc\n \n \n-object Endpoints\n+object Endpoints:\n \n    case class DID(did: String)\n    \n     \n@@ -68,5 +68,5 @@\n \n     val all: List[ServerEndpoint[Any, IO]] = apiEndpoints ++ docEndpoints\n \n \n-}\n+\n"
                },
                {
                    "date": 1697548215372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n \n object Endpoints:\n \n-   case class DID(did: String)\n+     case class DID(did: String)\n    \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697548220608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n \n object Endpoints:\n \n-     case class DID(did: String)\n+    case class DID(did: String)\n    \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697548435338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n            .in(query[String](\"did\"))\n            .out(jsonBody[DIDDoc])\n \n        //register a did:web by providing a tapir endpoint\n-    val resolveDidWebEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n+    val resolveDidEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.get\n         .in(\"resolve\" / \"web\")\n         .in(query[String](\"did\"))\n \n"
                },
                {
                    "date": 1697548449087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,14 +31,8 @@\n         .in(\"did\" / \"web\")\n         .in(stringJsonBody)\n         .out(jsonBody[DIDDoc])\n \n-    val resolveDidKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n-       endpoint.get\n-           .in(\"resolve\" / \"key\")\n-           .in(query[String](\"did\"))\n-           .out(jsonBody[DIDDoc])\n-\n        //register a did:web by providing a tapir endpoint\n     val resolveDidEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] =\n         endpoint.get\n         .in(\"resolve\" / \"web\")\n"
                },
                {
                    "date": 1697548461692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n \n object Endpoints:\n \n-    case class DID(did: String)\n+    case class DID(did: String):\n    \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697548470698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n \n object Endpoints:\n \n     case class DID(did: String):\n+        \n    \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697548476260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n object Endpoints:\n \n     case class DID(did: String):\n-        \n+        def is\n    \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697548496517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n object Endpoints:\n \n     case class DID(did: String):\n-        def is\n+        def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n    \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697548587846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,10 @@\n object Endpoints:\n \n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n+        def isDIDKey: Boolean = did.startsWith(\"did:key\")\n+    \n    \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n"
                },
                {
                    "date": 1697548811907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n-   \n+   enum\n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n         endpoint.post\n"
                },
                {
                    "date": 1697548822892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n-   enum\n+   enum \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n         endpoint.post\n"
                },
                {
                    "date": 1697548828198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n-   enum \n+   enum DIDType\n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n         endpoint.post\n"
                },
                {
                    "date": 1697548834012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n-   enum DIDType\n+   enum DID\n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n         endpoint.post\n"
                },
                {
                    "date": 1697548842411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,17 @@\n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n-   enum DID\n+   enum DIDMethod:\n+        case DIDWeb\n+        case DIDKey\n+\n+    case class DIDDoc(\n+        context: List[String],\n+        id: String,\n+        verificationMethod: List[String]\n+    )\n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n         endpoint.post\n"
                },
                {
                    "date": 1697548850301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,17 +18,17 @@\n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n-   enum DIDMethod:\n+    enum DIDMethod:\n         case DIDWeb\n         case DIDKey\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n         verificationMethod: List[String]\n-    )\n+    )   \n     \n   //register a did:key by providing a tapir endpoint\n     val didKeyEndpoint: PublicEndpoint[String, Unit, DIDDoc, Any] = \n         endpoint.post\n"
                },
                {
                    "date": 1697548867530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n-    enum DIDMethod:\n+    enum DID:\n         case DIDWeb\n         case DIDKey\n \n     case class DIDDoc(\n"
                },
                {
                    "date": 1697548877359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n-    enum DID:\n+    enum DID(x: String)):\n         case DIDWeb\n         case DIDKey\n \n     case class DIDDoc(\n"
                },
                {
                    "date": 1697548882635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n     enum DID(x: String)):\n-        case DIDWeb\n+        case DIDWeb()\n         case DIDKey\n \n     case class DIDDoc(\n         context: List[String],\n"
                },
                {
                    "date": 1697548899901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n     case class DID(did: String):\n         def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n-    enum DID(x: String)):\n-        case DIDWeb()\n+    enum DID(x: String):\n+        case DIDWeb(did: String)\n         case DIDKey\n \n     case class DIDDoc(\n         context: List[String],\n"
                },
                {
                    "date": 1697548906024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         def isDIDKey: Boolean = did.startsWith(\"did:key\")\n     \n     enum DID(x: String):\n         case DIDWeb(did: String)\n-        case DIDKey\n+        case DIDKey()\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697548931845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,15 +14,13 @@\n \n \n object Endpoints:\n \n-    case class DID(did: String):\n-        def isDIDWeb: Boolean = did.startsWith(\"did:web\")\n-        def isDIDKey: Boolean = did.startsWith(\"did:key\")\n+   \n     \n     enum DID(x: String):\n         case DIDWeb(did: String)\n-        case DIDKey()\n+        case DIDKey(did: String)\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697548949119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n object Endpoints:\n \n    \n     \n-    enum DID(x: String):\n+    enum DID(did: String):\n         case DIDWeb(did: String)\n         case DIDKey(did: String)\n \n     case class DIDDoc(\n"
                },
                {
                    "date": 1697604940771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \n    \n     \n     enum DID(did: String):\n-        case DIDWeb(did: String)\n+        case DIDWeb(did: String) extends \n         case DIDKey(did: String)\n \n     case class DIDDoc(\n         context: List[String],\n"
                },
                {
                    "date": 1697604948012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n \n    \n     \n     enum DID(did: String):\n-        case DIDWeb(did: String) extends \n-        case DIDKey(did: String)\n+        case DIDWeb(did: String) extends DID(did)\n+        case DIDKey(did: String) \n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697604999439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n    \n     \n     enum DID(did: String):\n         case DIDWeb(did: String) extends DID(did)\n-        case DIDKey(did: String) \n+        case DIDKey(did: String) extends DID(did)\n+        \n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697605009179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n     \n     enum DID(did: String):\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n+        case DIDUnknown(did: String) extends DID(did)\n         \n \n     case class DIDDoc(\n         context: List[String],\n"
                },
                {
                    "date": 1697605016381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     enum DID(did: String):\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n-        \n+        def \n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697605039991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     enum DID(did: String):\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n-        def \n+        def getDIDMethod\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697605051498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     enum DID(did: String):\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n-        def getDIDMethod\n+        def getDIDMethod(): String = did.split(\":\")(1)\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697605066079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     enum DID(did: String):\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n-        def getDIDMethod(): String = did.split(\":\")(1)\n+        def getDIDMethod(): String = did.split(\":\")(1) match\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697605081775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,11 @@\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n         def getDIDMethod(): String = did.split(\":\")(1) match\n+            case \"web\" => \"web\"\n+            case \"key\" => \"key\"\n+            case _ => \"unknown\"\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697605088774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n         def getDIDMethod(): String = did.split(\":\")(1) match\n-            case \"web\" => \"web\"\n+            case \"web\" => \n             case \"key\" => \"key\"\n             case _ => \"unknown\"\n \n     case class DIDDoc(\n"
                },
                {
                    "date": 1697605097421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n         def getDIDMethod(): String = did.split(\":\")(1) match\n-            case \"web\" => \n+            case \"web\" => DIDWeb(did).toString()\n             case \"key\" => \"key\"\n             case _ => \"unknown\"\n \n     case class DIDDoc(\n"
                },
                {
                    "date": 1697605117858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n         def getDIDMethod(): String = did.split(\":\")(1) match\n-            case \"web\" => DIDWeb(did).toString()\n+            case \"web\" => DIDWeb(did)\n             case \"key\" => \"key\"\n             case _ => \"unknown\"\n \n     case class DIDDoc(\n"
                },
                {
                    "date": 1697605972441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     enum DID(did: String):\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n-        def getDIDMethod(): String = did.split(\":\")(1) match\n+        def getDID: String = did.split(\":\")(1) match\n             case \"web\" => DIDWeb(did)\n             case \"key\" => \"key\"\n             case _ => \"unknown\"\n \n"
                },
                {
                    "date": 1697605978071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     enum DID(did: String):\n         case DIDWeb(did: String) extends DID(did)\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n-        def getDID: String = did.split(\":\")(1) match\n+        def getDID: DID = did.split(\":\")(1) match\n             case \"web\" => DIDWeb(did)\n             case \"key\" => \"key\"\n             case _ => \"unknown\"\n \n"
                },
                {
                    "date": 1697605994030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n         def getDID: DID = did.split(\":\")(1) match\n             case \"web\" => DIDWeb(did)\n-            case \"key\" => \"key\"\n+            case \"key\" => \n             case _ => \"unknown\"\n \n     case class DIDDoc(\n         context: List[String],\n"
                },
                {
                    "date": 1697606005276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n         case DIDKey(did: String) extends DID(did)\n         case DIDUnknown(did: String) extends DID(did)\n         def getDID: DID = did.split(\":\")(1) match\n             case \"web\" => DIDWeb(did)\n-            case \"key\" => \n-            case _ => \"unknown\"\n+            case \"key\" => DIDKey(did)\n+            case _ => \n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606091017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,10 @@\n         case DIDUnknown(did: String) extends DID(did)\n         def getDID: DID = did.split(\":\")(1) match\n             case \"web\" => DIDWeb(did)\n             case \"key\" => DIDKey(did)\n-            case _ => \n+            case _ => DIDUnknown(did)\n+       \n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606106256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         def getDID: DID = did.split(\":\")(1) match\n             case \"web\" => DIDWeb(did)\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n-       \n+        def getDIDMethod: String = did.split(\":\")(1)\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606115998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,10 @@\n             case \"web\" => DIDWeb(did)\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n         def getDIDMethod: String = did.split(\":\")(1)\n+        def getDIDMethodSpecificId: String = did.split(\":\")(2)\n+        \n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606121320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n         def getDIDMethod: String = did.split(\":\")(1)\n         def getDIDMethodSpecificId: String = did.split(\":\")(2)\n-        \n+        def\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606139436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n         def getDIDMethod: String = did.split(\":\")(1)\n         def getDIDMethodSpecificId: String = did.split(\":\")(2)\n-        def\n+        def \n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606146366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n         def getDIDMethod: String = did.split(\":\")(1)\n         def getDIDMethodSpecificId: String = did.split(\":\")(2)\n-        def \n+        override def productPrefix: String = ???\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606152707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n         def getDIDMethod: String = did.split(\":\")(1)\n         def getDIDMethodSpecificId: String = did.split(\":\")(2)\n-        override def productPrefix: String = ???\n+        \n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606163861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n         def getDIDMethod: String = did.split(\":\")(1)\n         def getDIDMethodSpecificId: String = did.split(\":\")(2)\n-        \n+        override def productPrefix: String = ???\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606170913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n         def getDIDMethod: String = did.split(\":\")(1)\n         def getDIDMethodSpecificId: String = did.split(\":\")(2)\n-        override def productPrefix: String = ???\n+        def\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697606179493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n         def getDIDMethod: String = did.split(\":\")(1)\n         def getDIDMethodSpecificId: String = did.split(\":\")(2)\n-        def\n+        def setDID\n \n     case class DIDDoc(\n         context: List[String],\n         id: String,\n"
                },
                {
                    "date": 1697610008794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             case \"key\" => DIDKey(did)\n             case _ => DIDUnknown(did)\n         def getDIDMethod: String = did.split(\":\")(1)\n         def getDIDMethodSpecificId: String = did.split(\":\")(2)\n-        def setDIDMethodSpecificId(id: String): DID = did.split(\":\")(1) match\n+        def setDIDMethodSpecificId(id: String): DID = did.split(\":\")(1) ma\n             case \"web\" => DIDWeb(did.split(\":\")(0) + \":\" + did.split(\":\")(1) + \":\" + id)\n             case \"key\" => DIDKey(did.split(\":\")(0) + \":\" + did.split(\":\")(1) + \":\" + id)\n             case _ => DIDUnknown(did)\n \n"
                }
            ],
            "date": 1697440745762,
            "name": "Commit-0",
            "content": "object Endpoints {\n  //register a did:key by providing a tapir endpoint\n   val didKeyEndpoint: Endpoint[Unit, DIDDoc, Unit, DIDDoc, Any] = endpoint.post\n       .in(\"did\" / \"key\")\n       .in(jsonBody[DIDDoc])\n       .out(jsonBody[DIDDoc])\n\n   //register a did:web by providing a tapir endpoint\n   val didWebEndpoint =\n     endpoint.post\n       .in(\"did\" / \"web\")\n       .in(jsonBody[DIDDoc])\n       .out(jsonBody[DIDDoc])\n\n}\n"
        }
    ]
}